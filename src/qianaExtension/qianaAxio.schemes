% The special symbols of the logic are qNot, qAnd, qTruth, and qQuote. These are not defined in the schemes but already exist implicitly
% In addition, we always include the following
PREDICATE ist OF ARITY 2
FUNCTION sub OF ARITY 3
FUNCTION eval OF ARITY 1
% Eval is simply called "E" in the article
PREDICATE wft OF ARITY 1
PREDICATE term OF ARITY 1

% Default QIANA axioms
FORMULA axiom5
BODY ![XC, X1, X2] :(ist(XC, qAnd(X1, X2)) => (ist(XC, X1) & ist(XC, X2)))

FORMULA axiom6
BODY ![XC, X1, X2] :(ist(XC, qAnd(X1, X2)) <=> ist(XC, qAnd(X2, X1)))

FORMULA axiom7
BODY ![XC, X1] :(ist(XC, qNot(qNot(X1))) <=> ist(XC, X1))

FORMULA axiom8
BODY ![XC, X1, X2, X3] :(ist(XC, qAnd(qAnd(X1, X2), X3)) <=> ist(XC, qAnd(X1, qAnd(X2, X3))))

FORMULA axiom9
BODY ![XC, X1, X2, X3] :(ist(XC, qOr(qAnd(X1, X2), X3)) <=> ist(XC, qAnd(qOr(X1, X3), qOr(X2, X3))))

FORMULA axiom10
BODY ![XC, X1, X2] :((ist(XC, qOr(X1, X2)) & ist(XC, qNot(X1))) => ist(XC, X2))

% Axioms specific to the finite axiomatization process
FORMULA axiom12
BODY ![X1] :(X1 = X1)

FORMULA axiom13
BODY ![X1, X2] :(X1 = X2 => X2 = X1)

FORMULA axiom14
BODY ![X1, X2, X3] :((X1 = X2 & X2 = X3) => X1 = X3)

FORMULA axiom15
BODY ![X1,...,X#, Y1,...,Y#] :((X1 = Y1&...&X# = Y#) => $f(X1,...,X#) = $f(Y1,...,Y#))
RANGE $f IN BASE_FUNCTION
DOT_ARITIES $f $f $f $f $f

FORMULA axiom16
BODY ![X1,...,X#, Y1,...,Y#] :((X1 = Y1&...&X# = Y#) => $p(X1,...,X#) <=> $p(Y1,...,Y#))
RANGE $p IN BASE_PREDICATE
DOT_ARITIES $p $p $p $p $p

FORMULA axiom17
BODY ![X1] :(term(qQuote(X1)))

FORMULA axiom18
BODY ![X1,...,X#] :((term(X1)&...&term(X#)) => term($f(X1,...,X#)))
RANGE $f IN BASE_FUNCTION
DOT_ARITIES $f $f $f

FORMULA axiom19
BODY ![X1] :(wft(qQuote(X1)))

FORMULA axiom20
BODY ![X1] :(wft(X1))

FORMULA axiom21
BODY ![X1,...,X#] :((wft(X1)&...&wft(X#)) => wft($f(X1,...,X#)))
RANGE $f IN BASE_FUNCTION
DOT_ARITIES $f $f $f

FORMULA axiom22
BODY ![X1] :(term(X1) => eval(qQuote(X1)) = X1)

FORMULA axiom23
BODY ![X1,...,X#] :((term(X1)&...&term(X#)) => eval($f(X1,...,X#)) = $f(eval(X1),...,eval(X#)))
RANGE $f IN BASE_FUNCTION
DOT_ARITIES $f $f $f $f

FORMULA axiom24
BODY ![X1,...,X#] :((term(X1)&...&term(X#)) => eval($qp(X1,...,X#)) = $qp(X1,...,X#))
RANGE $p IN BASE_PREDICATE
WITH $qp QUOTING $p
DOT_ARITIES $p $p $p $p

FORMULA axiom25
BODY ![X1, X2] :(eval(qAnd(X1, X2)) = qAnd(X1, X2))

FORMULA axiom26
BODY ![X1, X2] :(eval(qForall(X1, X2)) = qForall(X1, X2))

FORMULA axiom27
BODY ![X1] :(eval(qNot(X1)) = qNot(X1))

FORMULA axiom28
BODY ![X1] :(eval(X1) = X1)

FORMULA axiom29
BODY ![X1, X2, X3] :(term(X1) => sub(X1, X1, X3) = X3)

FORMULA axiom30
BODY ![X1, X2, X3] :(term(X1) => sub(X1, X2, X3) = X1)

FORMULA axiom31
BODY ![X1,...,X#, Y1, Y2] :((term(X1)&...&term(X#)) => sub($f(X1,...,X#), Y1, Y2) = $f(sub(X1, Y1, Y2),...,sub(X#, Y1, Y2)))
RANGE $f IN BASE_FUNCTION
DOT_ARITIES $f $f $f $f

FORMULA axiom32
BODY ![X1, X2, X3] :((term(X1) & term(X2)) => sub(qForall(X1, X2), X1, X3) = qForall(X1, X2))

FORMULA axiom33
BODY ![X1, X2, X3, X4] :((term(X1) & term(X2)) => sub(qForall(X3, X1), X2, X4) = qForall(X3, sub(X1, X2, X4)))

FORMULA axiom34
BODY ![X1, X2, X3] :((term(X1) & term(X2)) => sub(qQuote(X1), X2, X3) = qQuote(X1))

% Finite versions of infinite axioms
FORMULA axiom1fin
BODY ![X1,...,X#] :((wft(X1)&...&wft(X#)) => qTruth($qp(X1,...,X#)) <=> $p(eval(X1),...,eval(X#)))
DOT_ARITIES $p $p $p $p
RANGE $p IN BASE_PREDICATE
WITH $qp QUOTING $p

FORMULA axiom2fin
BODY ![X1, X2] :((term(X1) & term(X2)) => qTruth(qAnd(X1, X2)) <=> (qTruth(X1) & qTruth(X2)))

FORMULA axiom3fin
BODY ![X1] :(term(X1) => (qTruth(qNot(X1)) <=> ~(qTruth(X1))))

FORMULA axiom4fin
BODY ![X1] :(term(X1) => qTruth(qForall(X1)) <=> (![X2] :qTruth(sub(X1, X2, qQuote(X2)))))

FORMULA axiom11fin
BODY ![XC, X1] :((term(X1) => (ist(XC, qForall(X1)) => ![X2] :ist(XC, sub(X1, X2, qQuote(X2))))))

